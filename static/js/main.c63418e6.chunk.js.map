{"version":3,"sources":["types/Good.ts","components/GoodsList/GoodsList.tsx","components/LoadingError/LoadingError.tsx","api/goods.ts","helpers/index.tsx","components/Loader/Loader.tsx","App.tsx","index.tsx"],"names":["LoadError","GoodsType","GoodsList","_ref","goods","_jsx","children","map","good","style","color","name","id","LoadingError","props","className","text","getAll","delay","Promise","resolve","setTimeout","then","fetch","response","_response$headers$get","ok","Error","concat","status","statusText","headers","get","includes","ContentTypeError","json","get5First","sort","previousGood","currentGood","localeCompare","slice","first5Goods","_toConsumableArray","getRedGoods","filter","onlyRedGoods","Loader","_Fragment","App","_useState","useState","_useState2","_slicedToArray","setGoods","_useState3","_useState4","loading","setLoading","_useState5","_useState6","loadingError","setLoadingError","_useState7","Default","_useState8","currentGoodsType","setCurrentGoodsType","loadGoods","getGoods","goodsType","arguments","length","undefined","loadedGoods","catch","finally","_jsxs","disabled","type","onClick","All","FirstFive","OnlyRed","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c63418e6.chunk.js","sourcesContent":["export interface Good {\n  id: number;\n  name: string;\n  color: string;\n}\n\nexport enum LoadError {\n  LoadingError = 'An error occured when loading goods!',\n  ContentTypeError = 'Content-type is not supported',\n}\n\nexport enum GoodsType {\n  Default,\n  All,\n  FirstFive,\n  OnlyRed,\n}\n","import React from 'react';\nimport { Good } from '../../types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        style={{\n          color: good.color,\n        }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import './LoadingError.scss';\n\ntype Props = {\n  text: string;\n};\n\nexport const LoadingError: React.FC<Props> = (props) => (\n  <div className=\"error\">\n    <p className=\"error-text\">\n      {props.text}\n    </p>\n  </div>\n);\n","import { first5Goods, onlyRedGoods } from '../helpers';\nimport { Good, LoadError } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getAll(): Promise<Good[]> {\n  return wait(2000)\n    .then(() => fetch(API_URL))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      if (!response.headers.get('content-type')?.includes(\n        'application/json',\n      )) {\n        throw new Error(LoadError.ContentTypeError);\n      }\n\n      return response.json();\n    });\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => first5Goods([...goods]));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => onlyRedGoods(goods));\n};\n","import { Good } from '../types/Good';\n\nexport const first5Goods = (goods: Good[]) => {\n  return goods.sort((previousGood, currentGood) => (\n    previousGood.name.localeCompare(currentGood.name)\n  )).slice(0, 5);\n};\n\nexport const onlyRedGoods = (goods: Good[]) => {\n  return goods.filter(({ color }) => color === 'red');\n};\n","import './Loader.scss';\n\nexport const Loader = () => {\n  return (\n    <div className=\"loader\">\n      <></>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport 'bulma/css/bulma.min.css';\n\nimport { GoodsList } from './components/GoodsList/GoodsList';\nimport { LoadingError } from './components/LoadingError/LoadingError';\n\nimport { get5First, getAll, getRedGoods } from './api/goods';\nimport { Good, GoodsType, LoadError } from './types/Good';\nimport { Loader } from './components/Loader/Loader';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [loadingError, setLoadingError] = useState(false);\n  const [currentGoodsType, setCurrentGoodsType] = useState(GoodsType.Default);\n\n  const loadGoods = (\n    getGoods: () => Promise<Good[]>,\n    goodsType = GoodsType.Default,\n  ) => {\n    if (goodsType === currentGoodsType) {\n      return;\n    }\n\n    setLoading(true);\n    getGoods()\n      .then((loadedGoods) => setGoods(loadedGoods))\n      .catch(() => setLoadingError(true))\n      .finally(() => setLoading(false));\n\n    setCurrentGoodsType(goodsType);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-content\">\n        <h1 className=\"title\">Dynamic list of Goods</h1>\n\n        <div className=\"button-container\">\n          <button\n            disabled={loading}\n            className=\"button is-link\"\n            type=\"button\"\n            data-cy=\"all-button\"\n            onClick={() => loadGoods(getAll, GoodsType.All)}\n          >\n            Load all goods\n          </button>\n\n          <button\n            disabled={loading}\n            type=\"button\"\n            className=\"button is-link\"\n            data-cy=\"first-five-button\"\n            onClick={() => loadGoods(get5First, GoodsType.FirstFive)}\n          >\n            Load 5 first goods\n          </button>\n\n          <button\n            disabled={loading}\n            type=\"button\"\n            className=\"button is-link\"\n            data-cy=\"red-button\"\n            onClick={() => loadGoods(getRedGoods, GoodsType.OnlyRed)}\n          >\n            Load red goods\n          </button>\n        </div>\n\n        {!loading\n          ? <GoodsList goods={goods} />\n          : <Loader />}\n\n        {loadingError && <LoadingError text={LoadError.LoadingError} />}\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}