{"version":3,"sources":["components/GoodsList/GoodsList.tsx","components/ErrorMessage/ErrorMessage.tsx","api/goods.ts","types/index.tsx","helpers/index.tsx","components/Loader/Loader.tsx","App.tsx","index.tsx"],"names":["GoodsList","_ref","goods","_jsx","children","map","good","style","color","name","id","ErrorMessage","props","className","text","getAll","fetch","then","response","ok","Error","concat","status","statusText","json","LoadError","GoodsType","get5First","sort","previousGood","currentGood","localeCompare","slice","first5Goods","_toConsumableArray","getRedGoods","filter","onlyRedGoods","Loader","App","_useState","useState","_useState2","_slicedToArray","setGoods","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","isLoadingError","setIsLoadingError","_useState7","Default","_useState8","currentGoodsType","setCurrentGoodsType","loadGoods","getGoods","goodsType","arguments","length","undefined","loadedGoods","catch","finally","_jsxs","disabled","type","onClick","All","FirstFive","OnlyRed","_Fragment","LoadingError","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e4120ccd.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from '../../types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        style={{\n          color: good.color,\n        }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import './ErrorMessage.scss';\n\ntype Props = {\n  text: string;\n};\n\nexport const ErrorMessage: React.FC<Props> = (props) => (\n  <div className=\"error\">\n    <p className=\"error-text\">\n      {props.text}\n    </p>\n  </div>\n);\n","import { first5Goods, onlyRedGoods } from '../helpers';\nimport { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n}\n\nexport const get5First = (): Promise<Good[]> => {\n  return getAll()\n    .then(goods => first5Goods([...goods]));\n};\n\nexport const getRedGoods = (): Promise<Good[]> => {\n  return getAll()\n    .then(goods => onlyRedGoods(goods));\n};\n","export enum LoadError {\n  LoadingError = 'Failed to load goods due to a network error!',\n}\n\nexport enum GoodsType {\n  Default = 'default',\n  All = 'all',\n  FirstFive = 'firstFive',\n  OnlyRed = 'onlyRed',\n}\n","import { Good } from '../types/Good';\n\nexport const first5Goods = (goods: Good[]) => {\n  return goods.sort((previousGood, currentGood) => (\n    previousGood.name.localeCompare(currentGood.name)\n  )).slice(0, 5);\n};\n\nexport const onlyRedGoods = (goods: Good[]) => {\n  return goods.filter(({ color }) => color === 'red');\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"loader\" />\n);\n","import React, { useState } from 'react';\nimport './App.scss';\nimport 'bulma/css/bulma.min.css';\n\nimport { GoodsList } from './components/GoodsList/GoodsList';\nimport { ErrorMessage } from './components/ErrorMessage/ErrorMessage';\n\nimport { get5First, getAll, getRedGoods } from './api/goods';\nimport { Good } from './types/Good';\nimport { Loader } from './components/Loader/Loader';\nimport { GoodsType, LoadError } from './types';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLoadingError, setIsLoadingError] = useState(false);\n  const [currentGoodsType, setCurrentGoodsType] = useState(GoodsType.Default);\n\n  const loadGoods = (\n    getGoods: () => Promise<Good[]>,\n    goodsType = GoodsType.Default,\n  ) => {\n    setIsLoading(true);\n    getGoods()\n      .then((loadedGoods) => setGoods(loadedGoods))\n      .catch(() => setIsLoadingError(true))\n      .finally(() => setIsLoading(false));\n\n    setIsLoadingError(false);\n\n    if (goodsType !== currentGoodsType) {\n      setCurrentGoodsType(goodsType);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-content\">\n        <h1 className=\"title\">Dynamic list of Goods</h1>\n\n        <div className=\"button-container\">\n          <button\n            disabled={isLoading}\n            className=\"button is-link\"\n            type=\"button\"\n            data-cy=\"all-button\"\n            onClick={() => loadGoods(getAll, GoodsType.All)}\n          >\n            Load all goods\n          </button>\n\n          <button\n            disabled={isLoading}\n            type=\"button\"\n            className=\"button is-link\"\n            data-cy=\"first-five-button\"\n            onClick={() => loadGoods(get5First, GoodsType.FirstFive)}\n          >\n            Load 5 first goods\n          </button>\n\n          <button\n            disabled={isLoading}\n            type=\"button\"\n            className=\"button is-link\"\n            data-cy=\"red-button\"\n            onClick={() => loadGoods(getRedGoods, GoodsType.OnlyRed)}\n          >\n            Load red goods\n          </button>\n        </div>\n\n        {isLoading\n          ? <Loader />\n          : (\n            <>\n              {isLoadingError\n                ? <ErrorMessage text={LoadError.LoadingError} />\n                : <GoodsList goods={goods} />}\n            </>\n          )}\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}